// <auto-generated />
using Cinema_ASP_DotNet_Project.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Cinema_ASP_DotNet_Project.Migrations
{
    [DbContext(typeof(Cinema_ASP_DotNet_ProjectContext))]
    partial class Cinema_ASP_DotNet_ProjectContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Cinema_ASP_DotNet_Project.Models.AgeRating", b =>
                {
                    b.Property<int>("AgeRatingId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Rating");

                    b.HasKey("AgeRatingId");

                    b.ToTable("AgeRatingTable");
                });

            modelBuilder.Entity("Cinema_ASP_DotNet_Project.Models.Director", b =>
                {
                    b.Property<int>("DirectorId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TheDirectors");

                    b.HasKey("DirectorId");

                    b.ToTable("DirectorsTable");
                });

            modelBuilder.Entity("Cinema_ASP_DotNet_Project.Models.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Genres");

                    b.HasKey("GenreId");

                    b.ToTable("Genre");
                });

            modelBuilder.Entity("Cinema_ASP_DotNet_Project.Models.Movies", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AgeRatingId");

                    b.Property<int>("DirectorId");

                    b.Property<int>("GenreId");

                    b.Property<string>("MovieTitle");

                    b.Property<int>("YearOfReleaseId");

                    b.HasKey("MovieId");

                    b.HasIndex("AgeRatingId");

                    b.HasIndex("DirectorId");

                    b.HasIndex("GenreId");

                    b.HasIndex("YearOfReleaseId");

                    b.ToTable("MovieTable");
                });

            modelBuilder.Entity("Cinema_ASP_DotNet_Project.Models.YearOfRelease", b =>
                {
                    b.Property<int>("YearOfReleaseId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Year");

                    b.HasKey("YearOfReleaseId");

                    b.ToTable("Year Of Release");
                });

            modelBuilder.Entity("Cinema_ASP_DotNet_Project.Models.Movies", b =>
                {
                    b.HasOne("Cinema_ASP_DotNet_Project.Models.AgeRating", "AgeRating")
                        .WithMany("Movies")
                        .HasForeignKey("AgeRatingId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Cinema_ASP_DotNet_Project.Models.Director", "Director")
                        .WithMany("Movies")
                        .HasForeignKey("DirectorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Cinema_ASP_DotNet_Project.Models.Genre", "Genre")
                        .WithMany("Movies")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Cinema_ASP_DotNet_Project.Models.YearOfRelease", "YearOfRelease")
                        .WithMany("Movies")
                        .HasForeignKey("YearOfReleaseId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
